:root {
  /* Temporary piggy colors */
  --snout-main: #ece4ec;
  --snout-card: #d6c8d5;
  --snout-extra-card: #bfd1e0;
  --snout-resource-card: #e0cfbf;

  /* Not used for now */
  --snout-button: #5b434b;
  --snout-button-hover: #835f6d;
}

.main-container {
  background-color: var(--snout-main);
}

.card-container {
  background-color: var(--snout-card);
  box-shadow: inset 0px 0px 5px 0 rgb(151, 151, 151);
  transition:
    transform 0.1s ease,
    box-shadow 0.1s ease;
}

.extra-card {
  background-color: var(--snout-extra-card);
}

.resource-card {
  background-color: var(--snout-resource-card);
}

.card-container:hover {
  transform: translateY(2px);
  box-shadow: inset 0px 0px 7px 0 rgba(255, 210, 255, 0.3);
  cursor: pointer;
}

.thumbnail-container {
  position: relative;
}

.thumbnail-image {
  aspect-ratio: 16 / 5;
  width: 100%;
}

.thumbnail-text-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background: rgba(0, 0, 0, 0.75);
  color: white;
  padding: 4px 10px 4px 10px;
  display: flex;
  justify-content: space-between;
  border-bottom-left-radius: 0.71rem;
  border-bottom-right-radius: 0.71rem;
  font-weight: bold;
  text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.6); /* Subtle text shadow */
}

.thumbnail-text-overlay-compact {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  color: white;
  background: rgba(0, 0, 0, 0.65);
  padding: 4px 10px 4px 10px;
  display: flex;
  justify-content: space-between;
  font-weight: bold;
  text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.6); /* Subtle text shadow */
  border-radius: 0.165rem;
}

.tags-container {
  /* max-height: 4.5rem; */
  overflow: hidden;
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.tags-container.fade::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2rem;
  /* This does not quite work, why isn't there a way to infer the color from a constant ;_; */
  /* use sass or something for this in the actual piggy */
  background: linear-gradient(to bottom, #b7bcc200, #b7bcc2ff);
  pointer-events: none;
}

.tags-container.expanded {
  max-height: none;
}

.tags-container.expanded::after {
  display: none;
}

.see-more {
  display: none;
  cursor: pointer;
  color: #fff;
  background-color: var(--snout-button);
  padding: 0.1rem;
  border-radius: 2rem;
  text-align: center;
  margin-top: 0.5rem;
  transition: background-color 0.1s ease;
}

.see-more:hover {
  background-color: var(--snout-button-hover);
}

.tags-container + .see-more {
  display: block;
}

.tag-box {
  margin: 2px 2px 2px 2px;
  box-shadow: inset 0px 0px 5px 0 #00000033;
  text-shadow: 1px 1px 10px #000000aa;
}

.size-text {
  font-weight: bold;
  font-style: italic;
}

.subject-id {
  bottom: 0;
}

.description-container {
  bottom: 0;
}
